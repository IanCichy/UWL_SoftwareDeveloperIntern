using FDS;
using System;
using System.Deployment.Application;
using System.Windows.Forms;

namespace FDM3
{
    public partial class FrmLogin : Form
    {
        private String UserID;

        public FrmLogin()
        {
            InitializeComponent();
        }

        private void Login_Load(object sender, EventArgs e)
        {
            lblVersion.Text = "V " + ApplicationDeployment.CurrentDeployment.CurrentVersion.ToString(4);
            InstallUpdateSyncWithInfo();
            AcceptButton = btnLogin;
        }

        private void btnLogin_Click(object sender, EventArgs e)
        {
            // If the employee's credentials are invalid, show an error and do not log in.
            if ((Employee.IsValidCredentials(txtStudentId.Text, txtPassword.Text)))
            {
                var employee = Employee.GetEmployeeByEagleId(txtStudentId.Text);

                if (employee == null)
                {
                    lblNotFDMWorker.Visible = true;
                    return;
                }

                UserID = employee.GetEmployeeId().ToString();

                var list = Employee.GetEmployingHalls(employee.GetEmployeeId());
                if (list.Count == 0)
                {
                    lblNotFDMWorker.Visible = true;
                    return;
                }

                //Start FullFrontDeskApp and initalize some simple text fields

                this.Hide();

                Main FrontDesk = new Main(UserID);
                FrontDesk.Show();
            }
            else
            {
                lblInvalidLogin.Visible = true;
                return;
            }
        }

        private void InstallUpdateSyncWithInfo()
        {
            UpdateCheckInfo info = null;

            ApplicationDeployment ad = ApplicationDeployment.CurrentDeployment;

            info = ad.CheckForDetailedUpdate();

            if (info.UpdateAvailable)
            {
                Boolean doUpdate = true;

                if (doUpdate)
                {
                    try
                    {
                        ad.Update();
                        MessageBox.Show("The application has been upgraded, and will now restart.");
                        Application.Restart();
                    }
                    catch (DeploymentDownloadException dde)
                    {
                        MessageBox.Show("Cannot install the latest version of the application. \n\nPlease check your network connection, or try again later. Error: " + dde);
                        return;
                    }
                }
            }
        }
    }
}